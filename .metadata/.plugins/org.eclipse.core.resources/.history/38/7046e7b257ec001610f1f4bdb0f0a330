package client;

import java.io.*;
import javax.net.ssl.*;
import javax.security.cert.X509Certificate;


import java.security.KeyStore;
import java.security.cert.*;


public class Main {

	public static void main(String[] args) throws IOException {

		

		//Input host and port number
		System.out.println("Please input the host and port");
		Console cons = System.console();
		String host;

		System.out.print("Host: ");
		host = cons.readLine();
		
		System.out.print("Port: ");
		
		String portString = cons.readLine();
		
		//this will convert string port to int
		int port;
		try {
			port = Integer.parseInt(portString);
		} catch(NumberFormatException e){
			throw new NumberFormatException();
		}	
		System.out.println("Connecting to: " + host + " " + port);
		
		//input the name of the keystore you want to use, this checks if it exists
		boolean fileFound = false;
		InputStream is = null;
		while (!fileFound){
			System.out.println("Please insert name of certificate you would like to use: ");
			String certName = cons.readLine();
			try {
				is = new FileInputStream("../clientassets/keystores/" + certName);
				fileFound = true;
			} 	catch (FileNotFoundException ex) {
				System.out.println("File not found! Please try again.");
			}		
		}
		
		//password input for the keystore
		System.out.println("Please insert password: ");
		char[] ksPW = cons.readPassword();
		
		//this loads the keystore with the password provided
		KeyStore ks;
		try {
			ks = KeyStore.getInstance("JKS");
			ks.load(is, ksPW);
		} catch (Exception e) {
			throw new IOException(e.getMessage());
		}
		
		//this part establishes a connection via the client
		Client client = new Client();
		KeyManagerFactory kmf;
		try {
			kmf = KeyManagerFactory.getInstance("SunX509");
		} catch (Exception e){
			throw new IOException(e.getMessage());
		}
		try {
			kmf.init(ks, ksPW);
		} catch (Exception e){
			throw new IOException(e.getMessage());
		} 
		
		client.initConnection(kmf, host, port);
		 
	}

}
